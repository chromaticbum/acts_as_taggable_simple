ActsAsTaggableSimple
====================

This gem was built because other solutions for adding tagging
functionality were either outdated or too complex for most
simple needs.

ActsAsTaggableSimple adds #acts_as_taggable to ActiveRecord::Base.
When called, this method will add in a has_many :taggings and
has_many :tags, :through => :taggings relationship to the model.

tag_list and tag_list= methods are also defined in order to
see and update the tags on the model.

tag_list returns an array of strings of the tags.
tag_list= takes a string of tags separated by spaces.

This plugin leaves all of the custom computations, such as cloud
calculations to the user and is meant to only provide the most
basic framework for tags.


Implementation
=============

The implementation is currently as simple as it can be.
There is a polymorphic class called taggable which can 
have many taggings. Taggings belong to taggable and tag
models and act as the joining table for these items.
After this, all of the SQL generation is left to Rails.


Example
=======

app/models/taggable_model.rb

class TaggableModel < ActiveRecord::Base
    acts_as_taggable
end


rails console

t = TaggableModel.new :tag_list => "rails css javascript"
t.save
t.tag_list # returns ["rails", "css", "javascript"]
t.tag_list = "rails html js"
t.save
t.tag_list # returns ["rails", "html", "js"]
# note that #tag_list is updated immediately after setting
# it, while #tags and #taggings are only updated after
# saving the model


Credits/Thanks
==============

Many thank you's to the creators of the acts-as-taggable-on gem, which
if it was not obvious, this gem borrows quite heavily
from. This gem is in fact meant to be a stripped down
version of acts-as-taggable-on.


Copyright (c) 2011 Hollin R. Wilkins, released under the MIT license
